name: Nightly
on:
  push:
    branches:
      - nightly_testing
  schedule:
    - cron:  '0 3 * * *'

jobs:
  CI:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        openmp: ['ON', 'OFF']
        cmake_build_type: ['Debug']
    runs-on: ubuntu-20.04
    container: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Checkout kokkos
        uses: actions/checkout@v2.2.0
        with:
          repository: kokkos/kokkos
          ref: develop
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_OPENMP=${{ matrix.openmp }} \
            -DKokkos_ENABLE_HWLOC=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        uses: actions/checkout@v2.2.0
        with:
          repository: arborx/ArborX
          ref: master
          path: arborx
      - name: Build arborx
        working-directory: arborx
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos \
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v2.2.0
        with:
          repository: ECP-CoPA/Cabana
          ref: master
          path: cabana
      - name: Build Cabana
        working-directory: cabana
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Cache boost
        uses: actions/cache@v2
        id: boost-cache
        with:
          path: ~/boost
          key: boost-${{ matrix.distro }}-1.67.0
          restore-keys: boost-${{ matrix.distro }}
      - name: Get Boost
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
             wget --quiet https://boostorg.jfrog.io/artifactory/main/release/1.67.0/source/boost_1_67_0.tar.bz2 \
                  --output-document=boost.tar.bz2
             mkdir boost
             tar -xf boost.tar.bz2 -C boost --strip-components=1
      - name: Build Boost
        if: steps.boost-cache.outputs.cache-hit != 'true'
        working-directory: boost
        run: |
             ./bootstrap.sh --prefix=$HOME/boost
             ./b2 \
             hardcode-dll-paths=true dll-path=$HOME/boost/lib \
             link=shared variant=release cxxflags=-w \
             install
      - name: Checkout Picasso
        uses: actions/checkout@v2.2.0
      - name: Build Picasso
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/picasso \
            -DMPIEXEC_MAX_NUMPROCS=2 -DMPIEXEC_PREFLAGS="--oversubscribe" \
            -DCMAKE_PREFIX_PATH="$HOME/arborx;$HOME/cabana;$HOME/boost" \
            -DCMAKE_CXX_FLAGS="-Wall -pedantic ${cmake_cxx_flags}" \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DPicasso_ENABLE_TESTING=ON \
            -DPicasso_REQUIRE_SILO=ON \
            ${cmake_opts}
          cmake --build build --parallel 2
          cmake --install build
      - name: Test Picasso
        run: |
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
