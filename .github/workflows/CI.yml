name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${ {github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

jobs:
  CI:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        distro: ['ubuntu:latest']
        cxx: ['g++', 'clang++']
        openmp: ['ON', 'OFF']
        cmake_build_type: ['Debug', 'Release']
        kokkos_ver: ['4.2.00']
        arborx: ['v1.7']
        coverage: ['OFF']
        include:
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: '4.1.00'
            arborx: 'OFF'
            coverage: 'OFF'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: '4.3.00'
            arborx: 'fee3d777c0325a90ab50671fca69f2dc98f2a882'
            coverage: 'OFF'
          - distro: 'ubuntu:latest'
            cxx: 'g++'
            openmp: 'ON'
            cmake_build_type: 'Debug'
            kokkos_ver: '4.2.00'
            arborx: 'v1.7'
            coverage: 'ON'
    runs-on: ubuntu-latest
    container: ghcr.io/ecp-copa/ci-containers/${{ matrix.distro }}
    steps:
      - name: Get trail license
        if: ${{ matrix.cxx == 'icpc' }}
        run: |
          mkdir ~/Licenses
          curl https://dynamicinstaller.intel.com/api/v2/license > ~/Licenses/intel.lic
      - name: Checkout kokkos
        uses: actions/checkout@v3
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_OPENMP=${{ matrix.openmp }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DKokkos_ENABLE_HWLOC=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        if: ${{ matrix.arborx != 'OFF' }}
        uses: actions/checkout@v3
        with:
          repository: arborx/ArborX
          ref: ${{ matrix.arborx }}
          path: arborx
      - name: Build arborx
        if: ${{ matrix.arborx != 'OFF' }}
        working-directory: arborx
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos \
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v3
        with:
          repository: ECP-CoPA/Cabana
          ref: 0.6.1
          path: cabana
      - name: Build Cabana
        working-directory: cabana
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout json
        uses: actions/checkout@v2.2.0
        with:
          repository: nlohmann/json
          ref: v3.10.0
          path: json
      - name: Build json
        working-directory: json
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/json \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DJSON_BuildTests=OFF
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Picasso
        uses: actions/checkout@v3
      - name: Build Picasso
        run: |
          if [[ ${{ matrix.coverage }} == 'ON' ]]; then
            cmake_cxx_flags+=( "--coverage -O0" )
            cmake_opts+=( "-DCMAKE_EXE_LINKER_FLAGS=--coverage -DCMAKE_SHARED_LINKER_FLAGS=--coverage" )
          fi
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/picasso \
            -DMPIEXEC_MAX_NUMPROCS=2 -DMPIEXEC_PREFLAGS="--oversubscribe" \
            -DCMAKE_PREFIX_PATH="$HOME/arborx;$HOME/cabana;$HOME/json" \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_CXX_FLAGS="-Wall -pedantic ${cmake_cxx_flags[@]}" \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DPicasso_ENABLE_TESTING=ON \
            -DPicasso_REQUIRE_SILO=ON \
            ${cmake_opts[@]}
          cmake --build build --parallel 2
          cmake --install build
      - name: Test Picasso
        run: |
          CTEST_OUTPUT_ON_FAILURE=1 cmake --build build --target test
      - name: Upload Report to codecov.io
        uses: codecov/codecov-action@v1

  HIP:
    defaults:
      run:
        shell: bash
    env:
      # Needed because FindMPI relies heavily on the compiler wrappers, which aren't used with hipcc
      MPI_LOCATION: /usr/lib/x86_64-linux-gnu/openmpi/
    strategy:
      matrix:
        cxx: ['hipcc']
        cmake_build_type: ['Release']
        kokkos_ver: ['4.2.00']
    runs-on: ubuntu-latest
    container: ghcr.io/ecp-copa/ci-containers/rocm:latest
    steps:
      - name: Checkout json
        uses: actions/checkout@v3
        with:
          repository: nlohmann/json
          ref: v3.11.2
          path: json
      - name: Build json
        working-directory: json
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/json \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DJSON_BuildTests=OFF
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout kokkos
        uses: actions/checkout@v3
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_HIP=ON \
            -DKokkos_ARCH_VEGA908=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        uses: actions/checkout@v3
        with:
          repository: arborx/ArborX
          ref: v1.7
          path: arborx
      - name: Build arborx
        working-directory: arborx
        run: |
          cmake -B build \
            -DARBORX_ENABLE_ROCTHRUST=OFF \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos \
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v3
        with:
          repository: ECP-CoPA/Cabana
          # This version is post-release 0.6
          ref: f99c7db9d54c57373ada6b16132c20d89d1ebb8e
          path: cabana
      - name: Build Cabana
        working-directory: cabana
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            -DCMAKE_CXX_FLAGS="-I${MPI_LOCATION}/include" \
            -DCMAKE_EXE_LINKER_FLAGS="-L${MPI_LOCATION}/lib -lmpi" \
            -DCMAKE_SHARED_LINKER_FLAGS="-L${MPI_LOCATION}/lib -lmpi" \
            -DCabana_DISABLE_CAJITA_DEPRECATION_WARNINGS=ON \
            -DCabana_REQUIRE_MPI=ON
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Picasso
        uses: actions/checkout@v3
      - name: Build Picasso
        run: |
          cmake -B build \
            -D CMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -D CMAKE_CXX_COMPILER=${{ matrix.cxx }} \
            -D CMAKE_INSTALL_PREFIX=$HOME/Picasso \
            -D CMAKE_PREFIX_PATH="$HOME/Cabana;$HOME/arborx;$HOME/json" \
            -D CMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror -I${MPI_LOCATION}/include ${cmake_cxx_flags[@]}" \
            -D CMAKE_EXE_LINKER_FLAGS="-L${MPI_LOCATION}/lib -lmpi" \
            -D CMAKE_SHARED_LINKER_FLAGS="-L${MPI_LOCATION}/lib -lmpi" \
            -D MPIEXEC_MAX_NUMPROCS=2 \
            -D MPIEXEC_PREFLAGS="--oversubscribe" \
            -D Picasso_ENABLE_TESTING=ON
          cmake --build build --parallel 2
          cmake --install build
  CUDA:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        cmake_build_type: ['Release']
        kokkos_ver: ['4.2.00']
    runs-on: ubuntu-latest
    container: ghcr.io/ecp-copa/ci-containers/cuda:12.2.0
    steps:
      - name: Checkout json
        uses: actions/checkout@v3
        with:
          repository: nlohmann/json
          ref: v3.11.2
          path: json
      - name: Build json
        working-directory: json
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/json \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DJSON_BuildTests=OFF
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout kokkos
        uses: actions/checkout@v3
        with:
          repository: kokkos/kokkos
          ref: ${{ matrix.kokkos_ver }}
          path: kokkos
      - name: Build kokkos
        working-directory: kokkos
        run: |
          cmake -B build \
            -DCMAKE_INSTALL_PREFIX=$HOME/kokkos \
            -DKokkos_ENABLE_CUDA=ON \
            -DKokkos_ARCH_VOLTA72=ON \
            -DKokkos_ENABLE_CUDA_LAMBDA=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout arborx
        uses: actions/checkout@v3
        with:
          repository: arborx/ArborX
          ref: v1.7
          path: arborx
      - name: Build arborx
        working-directory: arborx
        run: |
          cmake -B build \
            -DCMAKE_PREFIX_PATH=${HOME}/kokkos \
            -DCMAKE_INSTALL_PREFIX=$HOME/arborx \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }}
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Cabana
        uses: actions/checkout@v3
        with:
          repository: ECP-CoPA/Cabana
          # This version is post-release 0.6
          ref: f99c7db9d54c57373ada6b16132c20d89d1ebb8e
          path: cabana
      - name: Build Cabana
        working-directory: cabana
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -DCMAKE_INSTALL_PREFIX=$HOME/Cabana \
            -DCMAKE_PREFIX_PATH="$HOME/kokkos" \
            -DCabana_DISABLE_CAJITA_DEPRECATION_WARNINGS=ON \
            -DCabana_REQUIRE_MPI=ON
          cmake --build build --parallel 2
          cmake --install build
      - name: Checkout Picasso
        uses: actions/checkout@v3
      - name: Build Picasso
        run: |
          cmake -B build \
            -D CMAKE_BUILD_TYPE=${{ matrix.cmake_build_type }} \
            -D CMAKE_CXX_FLAGS="-Wall -Wextra -pedantic -Werror -Wno-unused-but-set-variable ${cmake_cxx_flags[@]}" \
            -D CMAKE_INSTALL_PREFIX=$HOME/Picasso \
            -D CMAKE_PREFIX_PATH="$HOME/Cabana;$HOME/arborx;$HOME/json" \
            -D MPIEXEC_MAX_NUMPROCS=2 \
            -D MPIEXEC_PREFLAGS="--oversubscribe" \
            -D Picasso_ENABLE_TESTING=ON
          cmake --build build --parallel 2
          cmake --install build
